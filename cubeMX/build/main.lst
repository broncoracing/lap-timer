ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB137:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "i2c.h"
  24:Core/Src/main.c **** #include "spi.h"
  25:Core/Src/main.c **** #include "usart.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include <stdio.h>
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 2


  31:Core/Src/main.c **** #include "SEGGER_RTT.h"
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** char buff[512];
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c ****   
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_DMA_Init();
  94:Core/Src/main.c ****   MX_I2C1_Init();
  95:Core/Src/main.c ****   MX_USART1_UART_Init();
  96:Core/Src/main.c ****   MX_SPI1_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c ****   SEGGER_RTT_ConfigUpBuffer(0,NULL,NULL,0, SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL);
  99:Core/Src/main.c ****   HAL_GPIO_WritePin(PWR_LED_GPIO_Port,PWR_LED_Pin,1);
 100:Core/Src/main.c ****   HAL_GPIO_WritePin(PWR_LED_GPIO_Port,PWR_LED_Pin,0);
 101:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart1, buff, sizeof(buff));
 102:Core/Src/main.c ****   /* USER CODE END 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Infinite loop */
 105:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 106:Core/Src/main.c ****   while (1)
 107:Core/Src/main.c ****   {
 108:Core/Src/main.c ****     
 109:Core/Src/main.c ****     /* USER CODE END WHILE */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 112:Core/Src/main.c ****   }
 113:Core/Src/main.c ****   /* USER CODE END 3 */
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /**
 117:Core/Src/main.c ****   * @brief System Clock Configuration
 118:Core/Src/main.c ****   * @retval None
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c **** void SystemClock_Config(void)
 121:Core/Src/main.c **** {
 122:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 123:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 127:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 144:Core/Src/main.c ****   */
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 4


 145:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 157:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 158:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 159:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     Error_Handler();
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE END 4 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /**
 176:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** void Error_Handler(void)
 180:Core/Src/main.c **** {
  29              		.loc 1 180 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 181:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 182:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 183:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 183 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 5


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 6


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 7


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 8


 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 207 27 view .LVU2
  40              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 209 3 view .LVU3
  42              		.syntax unified
  43              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 184:Core/Src/main.c ****   while (1)
  51              		.loc 1 184 3 discriminator 1 view .LVU4
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****   }
  52              		.loc 1 186 3 discriminator 1 view .LVU5
 184:Core/Src/main.c ****   while (1)
  53              		.loc 1 184 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE137:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 9


  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB136:
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 121 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 176
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 ADB0     		sub	sp, sp, #180
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 184
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 122 3 view .LVU8
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 122 22 is_stmt 0 view .LVU9
  81 0004 4422     		movs	r2, #68
  82 0006 0021     		movs	r1, #0
  83 0008 1BA8     		add	r0, sp, #108
  84 000a FFF7FEFF 		bl	memset
  85              	.LVL0:
 123:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  86              		.loc 1 123 3 is_stmt 1 view .LVU10
 123:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  87              		.loc 1 123 22 is_stmt 0 view .LVU11
  88 000e 0021     		movs	r1, #0
  89 0010 1691     		str	r1, [sp, #88]
  90 0012 1791     		str	r1, [sp, #92]
  91 0014 1891     		str	r1, [sp, #96]
  92 0016 1991     		str	r1, [sp, #100]
  93 0018 1A91     		str	r1, [sp, #104]
 124:Core/Src/main.c **** 
  94              		.loc 1 124 3 is_stmt 1 view .LVU12
 124:Core/Src/main.c **** 
  95              		.loc 1 124 28 is_stmt 0 view .LVU13
  96 001a 5422     		movs	r2, #84
  97 001c 01A8     		add	r0, sp, #4
  98 001e FFF7FEFF 		bl	memset
  99              	.LVL1:
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 100              		.loc 1 129 3 is_stmt 1 view .LVU14
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 101              		.loc 1 129 36 is_stmt 0 view .LVU15
 102 0022 0223     		movs	r3, #2
 103 0024 1B93     		str	r3, [sp, #108]
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 104              		.loc 1 130 3 is_stmt 1 view .LVU16
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 105              		.loc 1 130 30 is_stmt 0 view .LVU17
 106 0026 4FF48072 		mov	r2, #256
 107 002a 1E92     		str	r2, [sp, #120]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 108              		.loc 1 131 3 is_stmt 1 view .LVU18
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 10


 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 109              		.loc 1 131 41 is_stmt 0 view .LVU19
 110 002c 1022     		movs	r2, #16
 111 002e 1F92     		str	r2, [sp, #124]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 112              		.loc 1 132 3 is_stmt 1 view .LVU20
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 113              		.loc 1 132 34 is_stmt 0 view .LVU21
 114 0030 2593     		str	r3, [sp, #148]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 115              		.loc 1 133 3 is_stmt 1 view .LVU22
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 116              		.loc 1 133 35 is_stmt 0 view .LVU23
 117 0032 2693     		str	r3, [sp, #152]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 118              		.loc 1 134 3 is_stmt 1 view .LVU24
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 119              		.loc 1 134 30 is_stmt 0 view .LVU25
 120 0034 0122     		movs	r2, #1
 121 0036 2792     		str	r2, [sp, #156]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 122              		.loc 1 135 3 is_stmt 1 view .LVU26
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 123              		.loc 1 135 30 is_stmt 0 view .LVU27
 124 0038 0A22     		movs	r2, #10
 125 003a 2892     		str	r2, [sp, #160]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 126              		.loc 1 136 3 is_stmt 1 view .LVU28
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 127              		.loc 1 136 30 is_stmt 0 view .LVU29
 128 003c 0722     		movs	r2, #7
 129 003e 2992     		str	r2, [sp, #164]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 130              		.loc 1 137 3 is_stmt 1 view .LVU30
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 131              		.loc 1 137 30 is_stmt 0 view .LVU31
 132 0040 2A93     		str	r3, [sp, #168]
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133              		.loc 1 138 3 is_stmt 1 view .LVU32
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 134              		.loc 1 138 30 is_stmt 0 view .LVU33
 135 0042 2B93     		str	r3, [sp, #172]
 139:Core/Src/main.c ****   {
 136              		.loc 1 139 3 is_stmt 1 view .LVU34
 139:Core/Src/main.c ****   {
 137              		.loc 1 139 7 is_stmt 0 view .LVU35
 138 0044 1BA8     		add	r0, sp, #108
 139 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 140              	.LVL2:
 139:Core/Src/main.c ****   {
 141              		.loc 1 139 6 view .LVU36
 142 004a E8B9     		cbnz	r0, .L9
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143              		.loc 1 145 3 is_stmt 1 view .LVU37
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144              		.loc 1 145 31 is_stmt 0 view .LVU38
 145 004c 0F23     		movs	r3, #15
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 11


 146 004e 1693     		str	r3, [sp, #88]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 147              		.loc 1 147 3 is_stmt 1 view .LVU39
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 148              		.loc 1 147 34 is_stmt 0 view .LVU40
 149 0050 0323     		movs	r3, #3
 150 0052 1793     		str	r3, [sp, #92]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 151              		.loc 1 148 3 is_stmt 1 view .LVU41
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 152              		.loc 1 148 35 is_stmt 0 view .LVU42
 153 0054 0023     		movs	r3, #0
 154 0056 1893     		str	r3, [sp, #96]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155              		.loc 1 149 3 is_stmt 1 view .LVU43
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 156              		.loc 1 149 36 is_stmt 0 view .LVU44
 157 0058 1993     		str	r3, [sp, #100]
 150:Core/Src/main.c **** 
 158              		.loc 1 150 3 is_stmt 1 view .LVU45
 150:Core/Src/main.c **** 
 159              		.loc 1 150 36 is_stmt 0 view .LVU46
 160 005a 1A93     		str	r3, [sp, #104]
 152:Core/Src/main.c ****   {
 161              		.loc 1 152 3 is_stmt 1 view .LVU47
 152:Core/Src/main.c ****   {
 162              		.loc 1 152 7 is_stmt 0 view .LVU48
 163 005c 0421     		movs	r1, #4
 164 005e 16A8     		add	r0, sp, #88
 165 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 166              	.LVL3:
 152:Core/Src/main.c ****   {
 167              		.loc 1 152 6 view .LVU49
 168 0064 90B9     		cbnz	r0, .L10
 156:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 169              		.loc 1 156 3 is_stmt 1 view .LVU50
 156:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 170              		.loc 1 156 38 is_stmt 0 view .LVU51
 171 0066 4123     		movs	r3, #65
 172 0068 0193     		str	r3, [sp, #4]
 157:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 173              		.loc 1 157 3 is_stmt 1 view .LVU52
 157:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 174              		.loc 1 157 38 is_stmt 0 view .LVU53
 175 006a 0023     		movs	r3, #0
 176 006c 0993     		str	r3, [sp, #36]
 158:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 177              		.loc 1 158 3 is_stmt 1 view .LVU54
 158:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 178              		.loc 1 158 36 is_stmt 0 view .LVU55
 179 006e 0C93     		str	r3, [sp, #48]
 159:Core/Src/main.c ****   {
 180              		.loc 1 159 3 is_stmt 1 view .LVU56
 159:Core/Src/main.c ****   {
 181              		.loc 1 159 7 is_stmt 0 view .LVU57
 182 0070 01A8     		add	r0, sp, #4
 183 0072 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 12


 184              	.LVL4:
 159:Core/Src/main.c ****   {
 185              		.loc 1 159 6 view .LVU58
 186 0076 58B9     		cbnz	r0, .L11
 165:Core/Src/main.c ****   {
 187              		.loc 1 165 3 is_stmt 1 view .LVU59
 165:Core/Src/main.c ****   {
 188              		.loc 1 165 7 is_stmt 0 view .LVU60
 189 0078 4FF40070 		mov	r0, #512
 190 007c FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 191              	.LVL5:
 165:Core/Src/main.c ****   {
 192              		.loc 1 165 6 view .LVU61
 193 0080 40B9     		cbnz	r0, .L12
 169:Core/Src/main.c **** 
 194              		.loc 1 169 1 view .LVU62
 195 0082 2DB0     		add	sp, sp, #180
 196              	.LCFI2:
 197              		.cfi_remember_state
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 0084 5DF804FB 		ldr	pc, [sp], #4
 201              	.L9:
 202              	.LCFI3:
 203              		.cfi_restore_state
 141:Core/Src/main.c ****   }
 204              		.loc 1 141 5 is_stmt 1 view .LVU63
 205 0088 FFF7FEFF 		bl	Error_Handler
 206              	.LVL6:
 207              	.L10:
 154:Core/Src/main.c ****   }
 208              		.loc 1 154 5 view .LVU64
 209 008c FFF7FEFF 		bl	Error_Handler
 210              	.LVL7:
 211              	.L11:
 161:Core/Src/main.c ****   }
 212              		.loc 1 161 5 view .LVU65
 213 0090 FFF7FEFF 		bl	Error_Handler
 214              	.LVL8:
 215              	.L12:
 167:Core/Src/main.c ****   }
 216              		.loc 1 167 5 view .LVU66
 217 0094 FFF7FEFF 		bl	Error_Handler
 218              	.LVL9:
 219              		.cfi_endproc
 220              	.LFE136:
 222              		.section	.text.main,"ax",%progbits
 223              		.align	1
 224              		.global	main
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	main:
 231              	.LFB135:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 232              		.loc 1 70 1 view -0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 13


 233              		.cfi_startproc
 234              		@ Volatile: function does not return.
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 00B5     		push	{lr}
 238              	.LCFI4:
 239              		.cfi_def_cfa_offset 4
 240              		.cfi_offset 14, -4
 241 0002 83B0     		sub	sp, sp, #12
 242              	.LCFI5:
 243              		.cfi_def_cfa_offset 16
  78:Core/Src/main.c **** 
 244              		.loc 1 78 3 view .LVU68
 245 0004 FFF7FEFF 		bl	HAL_Init
 246              	.LVL10:
  85:Core/Src/main.c **** 
 247              		.loc 1 85 3 view .LVU69
 248 0008 FFF7FEFF 		bl	SystemClock_Config
 249              	.LVL11:
  92:Core/Src/main.c ****   MX_DMA_Init();
 250              		.loc 1 92 3 view .LVU70
 251 000c FFF7FEFF 		bl	MX_GPIO_Init
 252              	.LVL12:
  93:Core/Src/main.c ****   MX_I2C1_Init();
 253              		.loc 1 93 3 view .LVU71
 254 0010 FFF7FEFF 		bl	MX_DMA_Init
 255              	.LVL13:
  94:Core/Src/main.c ****   MX_USART1_UART_Init();
 256              		.loc 1 94 3 view .LVU72
 257 0014 FFF7FEFF 		bl	MX_I2C1_Init
 258              	.LVL14:
  95:Core/Src/main.c ****   MX_SPI1_Init();
 259              		.loc 1 95 3 view .LVU73
 260 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 261              	.LVL15:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 262              		.loc 1 96 3 view .LVU74
 263 001c FFF7FEFF 		bl	MX_SPI1_Init
 264              	.LVL16:
  98:Core/Src/main.c ****   HAL_GPIO_WritePin(PWR_LED_GPIO_Port,PWR_LED_Pin,1);
 265              		.loc 1 98 3 view .LVU75
 266 0020 0223     		movs	r3, #2
 267 0022 0093     		str	r3, [sp]
 268 0024 0023     		movs	r3, #0
 269 0026 1A46     		mov	r2, r3
 270 0028 1946     		mov	r1, r3
 271 002a 1846     		mov	r0, r3
 272 002c FFF7FEFF 		bl	SEGGER_RTT_ConfigUpBuffer
 273              	.LVL17:
  99:Core/Src/main.c ****   HAL_GPIO_WritePin(PWR_LED_GPIO_Port,PWR_LED_Pin,0);
 274              		.loc 1 99 3 view .LVU76
 275 0030 0122     		movs	r2, #1
 276 0032 4021     		movs	r1, #64
 277 0034 4FF09040 		mov	r0, #1207959552
 278 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 279              	.LVL18:
 100:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart1, buff, sizeof(buff));
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 14


 280              		.loc 1 100 3 view .LVU77
 281 003c 0022     		movs	r2, #0
 282 003e 4021     		movs	r1, #64
 283 0040 4FF09040 		mov	r0, #1207959552
 284 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 285              	.LVL19:
 101:Core/Src/main.c ****   /* USER CODE END 2 */
 286              		.loc 1 101 3 view .LVU78
 287 0048 4FF40072 		mov	r2, #512
 288 004c 0249     		ldr	r1, .L16
 289 004e 0348     		ldr	r0, .L16+4
 290 0050 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 291              	.LVL20:
 292              	.L14:
 106:Core/Src/main.c ****   {
 293              		.loc 1 106 3 discriminator 1 view .LVU79
 112:Core/Src/main.c ****   /* USER CODE END 3 */
 294              		.loc 1 112 3 discriminator 1 view .LVU80
 106:Core/Src/main.c ****   {
 295              		.loc 1 106 9 discriminator 1 view .LVU81
 296 0054 FEE7     		b	.L14
 297              	.L17:
 298 0056 00BF     		.align	2
 299              	.L16:
 300 0058 00000000 		.word	.LANCHOR0
 301 005c 00000000 		.word	huart1
 302              		.cfi_endproc
 303              	.LFE135:
 305              		.global	buff
 306              		.section	.bss.buff,"aw",%nobits
 307              		.align	2
 308              		.set	.LANCHOR0,. + 0
 311              	buff:
 312 0000 00000000 		.space	512
 312      00000000 
 312      00000000 
 312      00000000 
 312      00000000 
 313              		.text
 314              	.Letext0:
 315              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 316              		.file 4 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 317              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 318              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 319              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 320              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 321              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 322              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 323              		.file 11 "Core/Inc/usart.h"
 324              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 325              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 326              		.file 14 "Core/Inc/gpio.h"
 327              		.file 15 "Core/Inc/dma.h"
 328              		.file 16 "Core/Inc/i2c.h"
 329              		.file 17 "Core/Inc/spi.h"
 330              		.file 18 "Core/Src/SEGGER_RTT.h"
 331              		.file 19 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 15


 332              		.file 20 "<built-in>"
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s:18     .text.Error_Handler:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s:26     .text.Error_Handler:00000000 Error_Handler
C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s:59     .text.SystemClock_Config:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s:66     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s:223    .text.main:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s:230    .text.main:00000000 main
C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s:300    .text.main:00000058 $d
C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s:311    .bss.buff:00000000 buff
C:\Users\Michael\AppData\Local\Temp\ccs791xQ.s:307    .bss.buff:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C1_Init
MX_USART1_UART_Init
MX_SPI1_Init
SEGGER_RTT_ConfigUpBuffer
HAL_GPIO_WritePin
HAL_UART_Receive_DMA
huart1
